pipeline {
 agent 'any'
 stages{
   stage('Build Maven') {
     steps {
      // Run the maven build
        withMaven(maven : 'maven') {
            bat'mvn clean install'
        }
      }
   }
   stage('Build Docker Image') {
	//steps {
           steps {
	      bat'docker build -t crbhaskar/dockerautodeploy .'
           }
	//}
   }
   stage('Push Image to Hub') {
	//steps {
           steps {
	      bat'docker login -u crbhaskar -p Meena123$'
              bat'docker push crbhaskar/dockerautodeploy'
           }
	//}
   }
   /*
  stage ('Run the image in container') {
    steps {
	    script {
		docker.withRegistry('https://index.docker.io/v2/','dockerhub-login') {
		    docker.withServer('tcp://localhost:2375', 'dockerhub-login') {
			docker.image('crbhaskar/dockerautodeploy').withRun('-p 8080:8080') {
			    //do things
			}
		    }
		}
	    }
    }
  }
  stage('Deploy') {
    steps {
    agent {
      docker {
        image 'crbhaskar/dockerautodeploy'
        reuseNode true
        registryUrl 'https://index.docker.io/v2/'
        registryCredentialsId 'dockerhub-login'
        args '-u root'
      }
    }
    }
  }
  */
   stage('Run the application in container using image'){
          runApp()
  }
 }
}
/*
def imagePrune(containerName){
    try {
        sh "docker image prune -f"
        sh "docker stop $containerName"
    } catch(error){}
}

def imageBuild(containerName, tag){
    sh "docker build -t $containerName:$tag  -t $containerName --pull --no-cache ."
    echo "Image build complete"
}

def pushToImage(containerName, tag, dockerUser, dockerPassword){
    sh "docker login -u $dockerUser -p $dockerPassword"
    sh "docker tag $containerName:$tag $dockerUser/$containerName:$tag"
    sh "docker push $dockerUser/$containerName:$tag"
    echo "Image push complete"
}
*/
def runApp(){
    bat'docker pull crbhaskar/dockerautodeploy'
    bat'docker run -d --rm -p 8080:8080 --name dockerautodeploy crbhaskar/dockerautodeploy'
    echo "Application started on port: 8080"
}